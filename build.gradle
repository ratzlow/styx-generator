//------------------------------------------------------------------------------
// Extending the current project build by integrating code generation logic
// into gradle life cycle - without an external plugin.
//
// see: https://docs.gradle.org/current/userguide/organizing_gradle_projects.html
//      https://docs.gradle.org/current/userguide/custom_tasks.html
//------------------------------------------------------------------------------

apply plugin: 'java'

repositories {
    mavenCentral()
}

tasks.register("generateSources", CodeGenTask.class) {
    description = "Generate Java src from FIX dictionary"
    packageName = project.properties['packageName']
    targetDir = project.properties['targetDir']
}

sourceSets {
    test {
        java {
            srcDirs "${project.properties['targetDir']}"
        }
    }
}

processResources.dependsOn generateSources

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.0')
}

test {
    useJUnitPlatform()
}

clean {
    delete project.properties['targetDir']
}